version: "3.7"

networks:
  route256:
    driver: bridge

services:

  checkout:
    container_name: 'checkout-app'
    image: checkout
    build: ./checkout/
    environment:
      DATABASE_URL: postgres://postgres:secret@checkout-db:5432/checkout?sslmode=disable
    ports:
      - "50052:50052"
    restart: unless-stopped
    networks:
      - route256
    # почему-то не резолвит route256.pavl.uk, поэтому прописал dns
    dns:
      - 8.8.8.8
    depends_on:
      - checkout-db

  checkout-db:
    container_name: 'checkout-db'
    image: postgres:15.1
    environment:
      POSTGRES_DB: checkout
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - checkout-db-data:/var/lib/postgresql/data
    ports:
      - "50432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d checkout" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - route256

  loms:
    container_name: 'loms-app'
    image: loms
    build: ./loms/
    environment:
      DATABASE_URL: postgres://postgres:secret@loms-db:5432/loms?sslmode=disable
      GRPC_PORT: 50051
      KAFKA_BROKERS: kafka1:29091,kafka2:29092,kafka3:29093
      DEVELOPMENT_MODE: true
    ports:
      - "50051:50051"
    restart: unless-stopped
    networks:
      - route256
    depends_on:
      loms-db:
        condition: service_started
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_started
      kafka2:
        condition: service_started
      kafka3:
        condition: service_started

  loms-db:
    image: postgres:15.1
    container_name: 'loms-db'
    environment:
      POSTGRES_DB: loms
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - loms-db-data:/var/lib/postgresql/data
    ports:
      - "50431:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d loms" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - route256

  zookeeper:
    container_name: 'zookeeper'
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_SERVERS=zookeeper:2888:3888
    networks:
      - route256

  kafka1:
    container_name: 'kafka1'
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://0.0.0.0:9091
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka1:29091,LISTENER_EXT://localhost:9091
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - ZOOKEEPER=zookeeper:2181
    networks:
      - route256

  kafka2:
    container_name: 'kafka2'
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka2:29092,LISTENER_EXT://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=2
      - ZOOKEEPER=zookeeper:2181
    networks:
      - route256

  kafka3:
    container_name: 'kafka3'
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      - KAFKA_LISTENERS=LISTENER_INT://kafka3:29093,LISTENER_EXT://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka3:29093,LISTENER_EXT://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=3
      - ZOOKEEPER=zookeeper:2181
    networks:
      - route256

  notifications:
    container_name: 'notifications-app'
    image: notifications
    build: ./notifications/
    environment:
      KAFKA_BROKERS: kafka1:29091,kafka2:29092,kafka3:29093
      DEVELOPMENT_MODE: true
    restart: unless-stopped
    networks:
      - route256
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_started
      kafka2:
        condition: service_started
      kafka3:
        condition: service_started

volumes:
  checkout-db-data:
  loms-db-data: